{"version":3,"sources":["webpack:///19.c402fc8f575c094d66fa.js","webpack:///./components/signup/components/signup_ldap.jsx"],"names":["webpackJsonp","2504","module","exports","__webpack_require__","global","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_createClass2","_createClass3","_inherits2","_inherits3","_propTypes","_propTypes2","_react","_react2","_reactIntl","_reactRouterDom","_browser_history","_diagnostics_actions","_global_actions","GlobalActions","_team_actions","_user_actions","_utils","Utils","_logo","_logo2","_back_button","_back_button2","_form_error","_form_error2","SignupLdap","_React$Component","props","this","_this","__proto__","handleLdapSignup","bind","handleLdapSignupSuccess","handleLdapIdChange","handleLdapPasswordChange","state","ldapError","ldapId","ldapPassword","get","location","object","trackEvent","e","setState","target","_this2","preventDefault","webLoginByLdap","err","message","_this3","hash","URLSearchParams","search","data","inviteId","addUserToTeamFromInvite","finishSignup","_this4","loadMe","then","query","loadDefaultLocale","redirect_to","browserHistory","push","redirectUserToDefaultTeam","ldapIdPlaceholder","window","mm_config","LdapLoginFieldName","localizeMessage","errorClass","ldapSignup","EnableLdap","mm_license","IsLicensed","LDAP","createElement","className","FormattedMessage","id","defaultMessage","onSubmit","error","margin","name","placeholder","onChange","spellCheck","autoCapitalize","type","disabled","terms","FormattedHTMLMessage","values","siteName","SiteName","TermsOfServiceLink","PrivacyPolicyLink","description","CustomBrand","EnableCustomBrand","CustomDescriptionText","src","Link","to","pathname","Component"],"mappings":"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","file":"19.c402fc8f575c094d66fa.js","sourcesContent":["webpackJsonp([19],{\n\n/***/ 2504:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(34);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(30);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(35);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(31);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(36);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(27);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(214);\n\nvar _reactRouterDom = __webpack_require__(457);\n\nvar _browser_history = __webpack_require__(81);\n\nvar _diagnostics_actions = __webpack_require__(303);\n\nvar _global_actions = __webpack_require__(142);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_actions = __webpack_require__(1147);\n\nvar _user_actions = __webpack_require__(168);\n\nvar _utils = __webpack_require__(47);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _logo = __webpack_require__(1164);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _back_button = __webpack_require__(1165);\n\nvar _back_button2 = _interopRequireDefault(_back_button);\n\nvar _form_error = __webpack_require__(1148);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SignupLdap = function (_React$Component) {\n    (0, _inherits3.default)(SignupLdap, _React$Component);\n    (0, _createClass3.default)(SignupLdap, null, [{\n        key: 'propTypes',\n        get: function get() {\n            return {\n                location: _propTypes2.default.object\n            };\n        }\n    }]);\n\n    function SignupLdap(props) {\n        (0, _classCallCheck3.default)(this, SignupLdap);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupLdap.__proto__ || (0, _getPrototypeOf2.default)(SignupLdap)).call(this, props));\n\n        _this.handleLdapSignup = _this.handleLdapSignup.bind(_this);\n        _this.handleLdapSignupSuccess = _this.handleLdapSignupSuccess.bind(_this);\n\n        _this.handleLdapIdChange = _this.handleLdapIdChange.bind(_this);\n        _this.handleLdapPasswordChange = _this.handleLdapPasswordChange.bind(_this);\n\n        _this.state = {\n            ldapError: '',\n            ldapId: '',\n            ldapPassword: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupLdap, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            (0, _diagnostics_actions.trackEvent)('signup', 'signup_user_01_welcome');\n        }\n    }, {\n        key: 'handleLdapIdChange',\n        value: function handleLdapIdChange(e) {\n            this.setState({\n                ldapId: e.target.value\n            });\n        }\n    }, {\n        key: 'handleLdapPasswordChange',\n        value: function handleLdapPasswordChange(e) {\n            this.setState({\n                ldapPassword: e.target.value\n            });\n        }\n    }, {\n        key: 'handleLdapSignup',\n        value: function handleLdapSignup(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            this.setState({ ldapError: '' });\n\n            (0, _user_actions.webLoginByLdap)(this.state.ldapId, this.state.ldapPassword, null, this.handleLdapSignupSuccess, function (err) {\n                _this2.setState({\n                    ldapError: err.message\n                });\n            });\n        }\n    }, {\n        key: 'handleLdapSignupSuccess',\n        value: function handleLdapSignupSuccess() {\n            var _this3 = this;\n\n            var hash = new URLSearchParams(this.props.location.search).get('h');\n            var data = new URLSearchParams(this.props.location.search).get('d');\n            var inviteId = new URLSearchParams(this.props.location.search).get('id');\n\n            if (inviteId || hash) {\n                (0, _team_actions.addUserToTeamFromInvite)(data, hash, inviteId, function () {\n                    _this3.finishSignup();\n                }, function () {\n                    // there's not really a good way to deal with this, so just let the user log in like normal\n                    _this3.finishSignup();\n                });\n            } else {\n                this.finishSignup();\n            }\n        }\n    }, {\n        key: 'finishSignup',\n        value: function finishSignup() {\n            var _this4 = this;\n\n            (0, _user_actions.loadMe)().then(function () {\n                var query = new URLSearchParams(_this4.props.location.search).get('');\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    _browser_history.browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var ldapIdPlaceholder = void 0;\n            if (global.window.mm_config.LdapLoginFieldName) {\n                ldapIdPlaceholder = global.window.mm_config.LdapLoginFieldName;\n            } else {\n                ldapIdPlaceholder = Utils.localizeMessage('login.ldapUsername', 'AD/LDAP Username');\n            }\n\n            var errorClass = '';\n            if (this.state.ldapError) {\n                errorClass += ' has-error';\n            }\n\n            var ldapSignup = void 0;\n            if (global.window.mm_config.EnableLdap === 'true' && global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.LDAP) {\n                ldapSignup = _react2.default.createElement(\n                    'div',\n                    { className: 'inner__content' },\n                    _react2.default.createElement(\n                        'h5',\n                        null,\n                        _react2.default.createElement(\n                            'strong',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.ldap',\n                                defaultMessage: 'AD/LDAP Credentials'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'form',\n                        {\n                            onSubmit: this.handleLdapSignup\n                        },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'signup__email-container' },\n                            _react2.default.createElement(_form_error2.default, {\n                                error: this.state.ldapError,\n                                margin: true\n                            }),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' + errorClass },\n                                _react2.default.createElement('input', {\n                                    className: 'form-control',\n                                    name: 'ldapId',\n                                    value: this.state.ldapId,\n                                    placeholder: ldapIdPlaceholder,\n                                    onChange: this.handleLdapIdChange,\n                                    spellCheck: 'false',\n                                    autoCapitalize: 'off'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' + errorClass },\n                                _react2.default.createElement('input', {\n                                    type: 'password',\n                                    className: 'form-control',\n                                    name: 'password',\n                                    value: this.state.ldapPassword,\n                                    placeholder: Utils.localizeMessage('login.password', 'Password'),\n                                    onChange: this.handleLdapPasswordChange,\n                                    spellCheck: 'false'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' },\n                                _react2.default.createElement(\n                                    'button',\n                                    {\n                                        type: 'submit',\n                                        className: 'btn btn-primary',\n                                        disabled: !this.state.ldapId || !this.state.ldapPassword\n                                    },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'login.signIn',\n                                        defaultMessage: 'Sign in'\n                                    })\n                                )\n                            )\n                        )\n                    )\n                );\n            } else {\n                return null;\n            }\n\n            var terms = null;\n            if (ldapSignup) {\n                terms = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'create_team.agreement',\n                        defaultMessage: 'By proceeding to create your account and use {siteName}, you agree to our <a href=\\'{TermsOfServiceLink}\\'>Terms of Service</a> and <a href=\\'{PrivacyPolicyLink}\\'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.',\n                        values: {\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }\n                    })\n                );\n            }\n\n            var description = null;\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n                description = global.window.mm_config.CustomDescriptionText;\n            } else {\n                description = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'web.root.signup_info',\n                    defaultMessage: 'All team communication in one place, searchable and accessible anywhere'\n                });\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_back_button2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container padding--less' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'h1',\n                            null,\n                            global.window.mm_config.SiteName\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            description\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.lets',\n                                defaultMessage: 'Let\\'s create your account'\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.haveAccount',\n                                defaultMessage: 'Already have an account?'\n                            }),\n                            ' ',\n                            _react2.default.createElement(\n                                _reactRouterDom.Link,\n                                {\n                                    to: {\n                                        pathname: '/login',\n                                        search: this.props.location.search\n                                    }\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.signIn',\n                                    defaultMessage: 'Click here to sign in.'\n                                })\n                            )\n                        ),\n                        ldapSignup,\n                        terms\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupLdap;\n}(_react2.default.Component); // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = SignupLdap;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 19.c402fc8f575c094d66fa.js","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite} from 'actions/team_actions.jsx';\nimport {loadMe, webLoginByLdap} from 'actions/user_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button.jsx';\nimport FormError from 'components/form_error.jsx';\n\nexport default class SignupLdap extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleLdapSignup = this.handleLdapSignup.bind(this);\n        this.handleLdapSignupSuccess = this.handleLdapSignupSuccess.bind(this);\n\n        this.handleLdapIdChange = this.handleLdapIdChange.bind(this);\n        this.handleLdapPasswordChange = this.handleLdapPasswordChange.bind(this);\n\n        this.state = ({\n            ldapError: '',\n            ldapId: '',\n            ldapPassword: ''\n        });\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_user_01_welcome');\n    }\n\n    handleLdapIdChange(e) {\n        this.setState({\n            ldapId: e.target.value\n        });\n    }\n\n    handleLdapPasswordChange(e) {\n        this.setState({\n            ldapPassword: e.target.value\n        });\n    }\n\n    handleLdapSignup(e) {\n        e.preventDefault();\n\n        this.setState({ldapError: ''});\n\n        webLoginByLdap(\n            this.state.ldapId,\n            this.state.ldapPassword,\n            null,\n            this.handleLdapSignupSuccess,\n            (err) => {\n                this.setState({\n                    ldapError: err.message\n                });\n            }\n        );\n    }\n\n    handleLdapSignupSuccess() {\n        const hash = (new URLSearchParams(this.props.location.search)).get('h');\n        const data = (new URLSearchParams(this.props.location.search)).get('d');\n        const inviteId = (new URLSearchParams(this.props.location.search)).get('id');\n\n        if (inviteId || hash) {\n            addUserToTeamFromInvite(\n                data,\n                hash,\n                inviteId,\n                () => {\n                    this.finishSignup();\n                },\n                () => {\n                    // there's not really a good way to deal with this, so just let the user log in like normal\n                    this.finishSignup();\n                }\n            );\n        } else {\n            this.finishSignup();\n        }\n    }\n\n    finishSignup() {\n        loadMe().then(\n            () => {\n                const query = (new URLSearchParams(this.props.location.search)).get('');\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        );\n    }\n\n    render() {\n        let ldapIdPlaceholder;\n        if (global.window.mm_config.LdapLoginFieldName) {\n            ldapIdPlaceholder = global.window.mm_config.LdapLoginFieldName;\n        } else {\n            ldapIdPlaceholder = Utils.localizeMessage('login.ldapUsername', 'AD/LDAP Username');\n        }\n\n        let errorClass = '';\n        if (this.state.ldapError) {\n            errorClass += ' has-error';\n        }\n\n        let ldapSignup;\n        if (global.window.mm_config.EnableLdap === 'true' && global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.LDAP) {\n            ldapSignup = (\n                <div className='inner__content'>\n                    <h5>\n                        <strong>\n                            <FormattedMessage\n                                id='signup.ldap'\n                                defaultMessage='AD/LDAP Credentials'\n                            />\n                        </strong>\n                    </h5>\n                    <form\n                        onSubmit={this.handleLdapSignup}\n                    >\n                        <div className='signup__email-container'>\n                            <FormError\n                                error={this.state.ldapError}\n                                margin={true}\n                            />\n                            <div className={'form-group' + errorClass}>\n                                <input\n                                    className='form-control'\n                                    name='ldapId'\n                                    value={this.state.ldapId}\n                                    placeholder={ldapIdPlaceholder}\n                                    onChange={this.handleLdapIdChange}\n                                    spellCheck='false'\n                                    autoCapitalize='off'\n                                />\n                            </div>\n                            <div className={'form-group' + errorClass}>\n                                <input\n                                    type='password'\n                                    className='form-control'\n                                    name='password'\n                                    value={this.state.ldapPassword}\n                                    placeholder={Utils.localizeMessage('login.password', 'Password')}\n                                    onChange={this.handleLdapPasswordChange}\n                                    spellCheck='false'\n                                />\n                            </div>\n                            <div className='form-group'>\n                                <button\n                                    type='submit'\n                                    className='btn btn-primary'\n                                    disabled={!this.state.ldapId || !this.state.ldapPassword}\n                                >\n                                    <FormattedMessage\n                                        id='login.signIn'\n                                        defaultMessage='Sign in'\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            );\n        } else {\n            return null;\n        }\n\n        let terms = null;\n        if (ldapSignup) {\n            terms = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='create_team.agreement'\n                        defaultMessage=\"By proceeding to create your account and use {siteName}, you agree to our <a href='{TermsOfServiceLink}'>Terms of Service</a> and <a href='{PrivacyPolicyLink}'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.\"\n                        values={{\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        let description = null;\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n            description = global.window.mm_config.CustomDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container padding--less'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <h1>{global.window.mm_config.SiteName}</h1>\n                        <h4 className='color--light'>\n                            {description}\n                        </h4>\n                        <h4 className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.lets'\n                                defaultMessage=\"Let's create your account\"\n                            />\n                        </h4>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={{\n                                    pathname: '/login',\n                                    search: this.props.location.search\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                        {ldapSignup}\n                        {terms}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/components/signup_ldap.jsx"],"sourceRoot":""}